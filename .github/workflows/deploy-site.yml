name: Deploy page

on:
  push:
    branches: ["main", "rzadp/multiplebrowsers"]
  pull_request:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build-faucet:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: client
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install node
        uses: actions/setup-node@v2
        with:
          node-version: 18
      - name: Install dependencies required by browsers for playwright tests
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libvpx.so.7 \
            libevent-2.1.so.7 \
            libopus.so.0 \
            libwoff2dec.so.1.0.2 \
            libharfbuzz-icu.so.0 \
            libgstallocators-1.0.so.0 \
            libgstapp-1.0.so.0 \
            libgstpbutils-1.0.so.0 \
            libgstaudio-1.0.so.0 \
            libgsttag-1.0.so.0 \
            libgstvideo-1.0.so.0 \
            libgstgl-1.0.so.0 \
            libgstfft-1.0.so.0 \
            libhyphen.so.0 \
            libmanette-0.2.so.0 \
            libflite.so.1 \
            libflite_usenglish.so.1 \
            libflite_cmulex.so.1 \
            libflite_cmu_us_awb.so.1 \
            libflite_cmu_us_kal.so.1 \
            libflite_cmu_us_rms.so.1 \
            libflite_cmu_us_slt.so.1 \
            libGLESv2.so.2 \
            libx264.so
      - run: yarn install --frozen-lockfile
      - run: yarn run check
      - run: yarn run lint
      - name: Install Playwright
        run: npx playwright install
      - run: yarn run test
      - run: yarn run build
        env:
          PUBLIC_CAPTCHA_KEY: 6LdU5kckAAAAANktvvAKJ0auYUBRP0su94G7WXwe
          PUBLIC_FAUCET_URL: https://ink-docs-rococo-faucet.parity-testnet.parity.io/drip/web
          GITHUB_PAGES: "/${{ github.event.repository.name }}"
          STATIC: true
      - uses: actions/upload-artifact@master
        with:
          name: faucet
          path: ./client/build
          if-no-files-found: error
  deploy-to-github-pages:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    needs: [build-faucet]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download page
        uses: actions/download-artifact@master
        with:
          name: faucet
          path: ./dist
      - name: Setup Pages
        uses: actions/configure-pages@v2
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./dist
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
