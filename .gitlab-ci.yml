image:                             paritytech/kubetools:helm3

variables:
  KUBE_NAMESPACE:                  "faucetbots"
  CI_REGISTRY:                     "paritytech"
  DOCKER_TAG:                      '$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA'
  GIT_STRATEGY:                    fetch
  DOCKER_DRIVER:                   overlay2
  DOCKER_HOST:                     tcp://localhost:2375

stages:
  - dockerize
  - deploy

#### stage:                        dockerize

.build_and_push:                   &build_and_push
  tags:
    - kubernetes-parity-build
  image:                           docker:git
  interruptible:                   true
  services:
    - docker:dind
  script:
    # create the docker image name
    - DOCKERFILE="Dockerfile-$(echo "${CI_JOB_NAME}" | awk -F'-' '{print $NF}')"
    - export DOCKER_IMAGE="${CI_REGISTRY}/${CI_JOB_NAME}"
    # set 'BUILDKIT_INLINE_CACHE' so generated images can be used for caching subsequently
    - export BUILD_ARGS="$BUILD_ARGS --build-arg BUILDKIT_INLINE_CACHE=1"
    # pull latest image used as cache to speed up the docker build process
    - docker pull $DOCKER_IMAGE:latest || true
    # login to the docker registry
    - echo "$Docker_Hub_Pass_Parity" | docker login -u "$Docker_Hub_User_Parity" --password-stdin
    # do: docker build
    - eval "docker build --cache-from $DOCKER_IMAGE:latest -t" "$DOCKER_IMAGE:$DOCKER_TAG" "-t $DOCKER_IMAGE:latest" "$BUILD_ARGS"  "-f $DOCKERFILE" "."
    # do: docker push
    - docker push "$DOCKER_IMAGE:latest"
    - docker push "$DOCKER_IMAGE:$DOCKER_TAG"

faucet-bot:
  stage:                           dockerize
  environment:
    name:                          parity-build
  rules:
    - changes:
      - "src/bot/**/*"
      - "Dockerfile-bot"
    - if: '$CI_COMMIT_REF_NAME == "main" || $CI_COMMIT_REF_NAME =~ /^fv.*/'
  <<:                              *build_and_push

faucet-server:
  stage:                           dockerize
  #environment:
  #  name:                          parity-build
  rules:
    - changes:
      - "src/server/**/*"
      - "Dockerfile-server"
    - if: '$CI_COMMIT_REF_NAME == "main" || $CI_COMMIT_REF_NAME =~ /^fv.*/'
  <<:                              *build_and_push


#### stage:                        deploy

.deploy-k8s:                       &deploy-k8s
  script:
    - echo ${KUBE_NAMESPACE}
    - echo ${CI_ENVIRONMENT_NAME}

    # do a dry-run 1st
    - helm upgrade ${CI_ENVIRONMENT_NAME} kubernetes/faucetbot
      --dry-run
      --install
      --namespace ${KUBE_NAMESPACE}
      --values kubernetes/faucetbot/${CI_ENVIRONMENT_NAME}-values.yaml
      --set server.secret.FAUCET_ACCOUNT_MNEMONIC="${FAUCET_ACCOUNT_MNEMONIC}"
      --set bot.secret.MATRIX_ACCESS_TOKEN="${MATRIX_ACCESS_TOKEN}"

    # install/upgrade faucetbot
    - helm upgrade ${CI_ENVIRONMENT_NAME} kubernetes/faucetbot
      --install
      --namespace ${KUBE_NAMESPACE}
      --values kubernetes/faucetbot/${CI_ENVIRONMENT_NAME}-values.yaml
      --set server.secret.FAUCET_ACCOUNT_MNEMONIC="${FAUCET_ACCOUNT_MNEMONIC}"
      --set bot.secret.MATRIX_ACCESS_TOKEN="${MATRIX_ACCESS_TOKEN}"

canvas:
  stage:                           deploy
  environment:
    name:                          canvas
  tags:
    - kubernetes-parity-build
  rules:
    - if: '$CI_COMMIT_REF_NAME == "main" || $CI_COMMIT_REF_NAME =~ /^fv.*/'
  <<:                              *deploy-k8s
